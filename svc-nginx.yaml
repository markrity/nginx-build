apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: candidate
    meta.helm.sh/release-namespace: default
  creationTimestamp: "2021-03-07T18:59:03Z"
  finalizers:
  - service.kubernetes.io/load-balancer-cleanup
  labels:
    app: svc-nginx
    app.kubernetes.io/managed-by: Helm
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:meta.helm.sh/release-name: {}
          f:meta.helm.sh/release-namespace: {}
        f:finalizers:
          .: {}
          v:"service.kubernetes.io/load-balancer-cleanup": {}
        f:labels:
          .: {}
          f:app: {}
          f:app.kubernetes.io/managed-by: {}
      f:spec:
        f:externalTrafficPolicy: {}
        f:ports:
          .: {}
          k:{"port":80,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
        f:selector:
          .: {}
          f:app: {}
        f:sessionAffinity: {}
        f:type: {}
    manager: Go-http-client
    operation: Update
    time: "2021-03-07T18:59:03Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:loadBalancer:
          f:ingress: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-03-07T18:59:46Z"
  name: svc-nginx
  namespace: default
  resourceVersion: "1340"
  selfLink: /api/v1/namespaces/default/services/svc-nginx
  uid: cb13aa5d-a94c-4072-bde8-07807bdcd957
spec:
  clusterIP: 10.235.255.234
  externalTrafficPolicy: Cluster
  ports:
  - name: 80-80
    nodePort: 30954
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
    - ip: 35.226.146.160